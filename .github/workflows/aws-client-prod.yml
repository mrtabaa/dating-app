name: AWS da-client-mr => Build, deploy and clean Node.js / Angular app to S3 Bucket

on:
  push:
    branches:
      - feature/aws-prod
    paths:
      - 'client/**'
      
  pull_request:
      branches:
      - feature/aws-prod
      paths:
      - 'client/**'

  workflow_dispatch: # This line adds the manual trigger option

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build
        working-directory: client
        run: |
          npm install --legacy-peer-deps
          npm run build --configuration=production

      - name: Upload build artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: client/dist/client

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    
    steps:
      - name: Download build artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./client/dist/client

      - name: Sync files to S3
        run: |
          aws s3 sync ./client/dist/client/browser/ s3://da-client-prod --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      
  cleanup:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Clean up artifacts and publish directory
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Clean up old files from S3 (da-client-prod bucket)
        run: |
          aws s3 ls s3://da-client-prod --recursive | while read -r line;
          do
            createDate=$(echo $line | awk '{print $1" "$2}')
            createDate=$(date -d"$createDate" +%s)
            olderThan=$(date -d"2 days ago" +%s)
            if [[ $createDate -lt $olderThan ]]
            then
              fileName=$(echo $line | awk '{print $4}')
              if [[ $fileName != "" ]]
              then
                aws s3 rm s3://da-client-prod/$fileName
              fi
            fi
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
